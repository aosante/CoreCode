using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;

namespace DataAccess.Dao
{
    public class SqlDao
    {

        private const string CONNECTION_STRING = @"Data Source=LOPEZCE; Initial Catalog=CoreCode_Airport_Web; User ID=corecodelog;Password=coreCode12345";
<<<<<<< HEAD
=======

>>>>>>> eb04e69e8c8f5dc6f13f9dc4f0ef892ca0998373

        private static SqlDao instance;

        private SqlDao()
        {
        }

        public static SqlDao GetInstance()
        {
            if (instance == null)
                instance = new SqlDao();

            return instance;
        }

        public void ExecuteProcedure(SqlOperation sqlOperation)
        {
            using (var conn = new SqlConnection(CONNECTION_STRING))
            using (var command = new SqlCommand(sqlOperation.ProcedureName, conn)
            {
                CommandType = CommandType.StoredProcedure
            })
            {
                foreach (var param in sqlOperation.Parameters) command.Parameters.Add(param);
                conn.Open();
                command.ExecuteNonQuery();
            }
        }

        public List<Dictionary<string, object>> ExecuteQueryProcedure(SqlOperation sqlOperation)
        {
            var lstResult = new List<Dictionary<string, object>>();
            using (var conn = new SqlConnection(CONNECTION_STRING))
            using (var command = new SqlCommand(sqlOperation.ProcedureName, conn)
            {
                CommandType = CommandType.StoredProcedure
            })
            {
                foreach (var param in sqlOperation.Parameters) command.Parameters.Add(param);
                conn.Open();
                var reader = command.ExecuteReader();
                if (reader.HasRows)
                    while (reader.Read())
                    {
                        var dict = new Dictionary<string, object>();
                        for (var lp = 0; lp < reader.FieldCount; lp++)
                            dict.Add(reader.GetName(lp), reader.GetValue(lp));
                        lstResult.Add(dict);
                    }
            }

            return lstResult;
        }

        public DataTableCollection ExecuteDataTableCollectionQuery(SqlOperation sqlOperation)
        {
            using (var conn = new SqlConnection(CONNECTION_STRING))
            using (var command = new SqlCommand(sqlOperation.ProcedureName, conn)
            {
                CommandType = CommandType.StoredProcedure
            })
            {
                foreach (var param in sqlOperation.Parameters) command.Parameters.Add(param);
                DataSet ds=new DataSet();
                SqlDataAdapter da = new SqlDataAdapter();
                conn.Open();
                da.SelectCommand = command;
                da.Fill(ds);
                return ds.Tables;
            }
        }
    }
}
